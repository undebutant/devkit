---
- name: Create docker group
  group:
    name: docker
    state: present

- name: Add the user to docker group
  user:
    name: "{{ main_user }}"
    groups: docker
    append: yes

- name: Check docker gpg key
  stat:
    path: '/etc/apt/trusted.gpg.d/docker.gpg'
  register: docker_gpg_key

- name: Download docker raw gpg key
  get_url:
    url: 'https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg'
    dest: '/tmp/docker_raw.gpg'
    mode: '0644'
    force: yes
  when: not docker_gpg_key.stat.exists

- name: Add docker gpg key to trusted keys
  shell:
    cmd: 'cat /tmp/docker_raw.gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg'
  when: not docker_gpg_key.stat.exists

- name: Make sure docker gpg key has correct permissions
  file:
    path: '/etc/apt/trusted.gpg.d/docker.gpg'
    state: file
    mode: '0644'
  when: not docker_gpg_key.stat.exists

- name: Delete docker temp gpg key
  file:
    path: '/tmp/docker_raw.gpg'
    state: absent
  when: not docker_gpg_key.stat.exists

- name: Add docker apt-repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
    mode: '0644'
    update_cache: yes

- name: Install docker packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Enable docker service
  systemd:
    name: docker.service
    enabled: yes
    masked: no

- name: Enable docker socket
  systemd:
    name: docker.socket
    enabled: yes
    masked: no

- name: Make sure /etc/docker folder exists
  file:
    path: '/etc/docker'
    state: directory
    mode: '0755'

- name: Create docker daemon config
  template:
    src: 'daemon.json'
    dest: '/etc/docker/daemon.json'
    mode: '0600'

- name: Create docker daemon logs folder
  file:
    path: "/home/{{ main_user }}/.docker"
    state: directory
    mode: '0755'
    owner: "{{ main_user }}"
    group: "{{ main_user }}"

- name: Create docker cli-plugins folder
  file:
    path: '/usr/local/lib/docker/cli-plugins'
    state: directory
    mode: '0755'

- name: Check docker-compose install
  stat:
    path: '/usr/local/lib/docker/cli-plugins/docker-compose'
  register: docker_compose_bin

- name: Check docker-compose installed version
  shell:
    cmd: docker compose version --short
  register: docker_compose_installed_version
  when: docker_compose_bin.stat.exists
  changed_when: false

- name: Install docker-compose binary
  get_url:
    url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-linux-x86_64"
    dest: '/usr/local/lib/docker/cli-plugins/docker-compose'
    mode: '0755'
    force: yes
  when: not docker_compose_bin.stat.exists or (docker_compose_installed_version.stdout != docker_compose_version)
